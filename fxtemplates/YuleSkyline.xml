<beast version='2.0'
       namespace='beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.math:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions'>


 <!-- tree priors -->
    <mergewith point='treePriorTemplates'>

        <!-- Yule/Pure birth for Bayesian skyline -->
        <subtemplate id='YuleSkyline' class='biceps.YuleSkyline'
                     mainid='YuleSkyline.t:$(n)'
                     suppressInputs='biceps.YuleSkyline.tree,
                     biceps.YuleSkyline.treeIntervals'
                     hmc="YuleSkyline/index/=Priors/YuleSkyline/,
                     YuleSkylineBirthRateRatePrior/index/=Priors/YuleSkyline/#birth-rate-rate-hyper-prior">
            <![CDATA[
            <distribution spec="biceps.YuleSkyline" id='YuleSkyline.t:$(n)'
                birthRateShape="2.0"
                linkedMean="true" logMeans="false"
               >
                <groupSizes id="YuleSkylineGroupSizes.t:$(n)" spec="parameter.IntegerParameter" dimension="10" estimate="false">1</groupSizes>
                <birthRateRate id="YuleSkylineBirthRateRate.t:$(n)" spec="parameter.RealParameter" value="1.0" lower="0.0" estimate="true"/>
                <treeIntervals spec='beast.base.evolution.tree.TreeIntervals' id='YuleSkylineBirthRateTreeIntervals.t:$(n)' tree='@Tree.t:$(n)'/>
            </distribution>

             <prior id="YuleSkylineBirthRateRatePrior.t:$(n)" name="distribution" x="@YuleSkylineBirthRateRate.t:$(n)">
                <LogNormal meanInRealSpace="true" name="distr" M="1" S="1"/>
            </prior>


		    <operator id='YuleSkylineBirthRateRateScaler.t:$(n)' spec='beast.base.evolution.operator.kernel.BactrianScaleOperator' scaleFactor="0.1" weight="5" parameter="@YuleSkylineBirthRateRate.t:$(n)"/>

	    	<operator id="YuleSkylineEpochTop.t:$(n)" spec="beast.base.evolution.operator.EpochFlexOperator" tree="@Tree.t:$(n)" weight="2.0" scaleFactor="0.1"/>
	    	<operator id="YuleSkylineEpochAll.t:$(n)" spec="beast.base.evolution.operator.EpochFlexOperator" tree="@Tree.t:$(n)" weight="2.0" scaleFactor="0.1" fromOldestTipOnly="false"/>      
    		<operator id="YuleSkylineTreeFlex.t:$(n)" spec="beast.base.evolution.operator.TreeStretchOperator" scaleFactor="0.01" tree="@Tree.t:$(n)" weight="2.0"/>
    <!--
		    <operator id="YuleSkylineTreeFlexUpDown.t:$(n)" spec="beast.base.evolution.operator.TreeStretchOperator" scaleFactor="0.01" tree="@Tree.t:$(n)" meanRate="@strict.clock" weight="2.0"/>
   -->


            <operator id='YuleSkylineTreeRootScaler.t:$(n)' spec='beast.base.evolution.operator.kernel.BactrianScaleOperator' scaleFactor="0.1" weight="3" tree="@Tree.t:$(n)" rootOnly='true'/>
            <operator id='YuleSkylineUniformOperator.t:$(n)' spec='beast.base.evolution.operator.kernel.BactrianNodeOperator' weight="30" tree="@Tree.t:$(n)"/>
            <operator id='YuleSkylineSubtreeSlide.t:$(n)' spec='beast.base.evolution.operator.kernel.BactrianSubtreeSlide' weight="15" size="1.0" tree="@Tree.t:$(n)"/>
            <operator id='YuleSkylineNarrow.t:$(n)' spec='Exchange' isNarrow='true' weight="15" tree="@Tree.t:$(n)"/>
            <operator id='YuleSkylineWide.t:$(n)' spec='Exchange' isNarrow='false' weight="3" tree="@Tree.t:$(n)"/>
            <operator id='YuleSkylineWilsonBalding.t:$(n)' spec='WilsonBalding' weight="3" tree="@Tree.t:$(n)"/>

			<operator id='YuleSkylineGroupSizesDelta.t:$(n)' spec='DeltaExchangeOperator' delta="1" weight="6" integer="true"
                              intparameter="@YuleSkylineGroupSizes.t:$(n)"/>
]]>
            <connect srcID='YuleSkyline.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Coalescent with Integrated Bayesian epoch prior for tree t:$(n)
            </connect>

            <connect srcID='YuleSkylineBirthRateRatePrior.t:$(n)' targetID='prior' inputName='distribution' 
            		if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineBirthRateRate.t:$(n)/estimate=true'/>

            <connect srcID='YuleSkylineBirthRateRate.t:$(n)'           targetID='state' inputName='stateNode' if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineBirthRateRate.t:$(n)/estimate=true'/>
			<connect srcID='YuleSkylineGroupSizes.t:$(n)'              targetID='state' inputName='stateNode' if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineGroupSizes.t:$(n)/estimate=true'/>

            <connect srcID='YuleSkylineEpochTop.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='YuleSkylineEpochAll.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='YuleSkylineTreeFlex.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <!--
            <connect srcID='YuleSkylineTreeFlexUpDown.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            -->

            <connect srcID='YuleSkylineTreeRootScaler.t:$(n)'            targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales root node for tree t:$(n)</connect>
            <connect srcID='YuleSkylineUniformOperator.t:$(n)'           targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Draws new internal node heights uniformally for tree t:$(n)</connect>
            <connect srcID='YuleSkylineSubtreeSlide.t:$(n)'              targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs subtree slide rearrangement of tree t:$(n)</connect>
            <connect srcID='YuleSkylineNarrow.t:$(n)'                    targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Narrow exchange performs local rearrangement of tree t:$(n)</connect>
            <connect srcID='YuleSkylineWide.t:$(n)'                      targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Wide exchange performs global rearrangement of tree t:$(n)</connect>
            <connect srcID='YuleSkylineWilsonBalding.t:$(n)'             targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs Wilson-Balding global rearrangement of tree t:$(n)</connect>
            <connect srcID='YuleSkylineGroupSizesDelta.t:$(n)'           targetID='mcmc' inputName='operator' if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineGroupSizes.t:$(n)/estimate=true'>Propose group sizes for Yule skyline prior on tree t:$(n)</connect>


            <connect srcID='YuleSkylineBirthRateRateScaler.t:$(n)' targetID='mcmc' inputName='operator'
            		if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineBirthRateRate.t:$(n)/estimate=true'>Scale rate of Yule prior of tree t:$(n)
            </connect>

            <connect srcID='YuleSkyline.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(YuleSkyline.t:$(n))'/>
            <connect srcID='YuleSkylineBirthRateRate.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(YuleSkyline.t:$(n)) and YuleSkylineBirthRateRate.t:$(n)/estimate=true'/>

        </subtemplate>



    </mergewith>
</beast>


